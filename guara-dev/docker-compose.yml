version: "3.7"

services:
  
  base:
    image: base_image
    build:
      context: .
      dockerfile: Dockerfile
    ports: 
      - "5432:5432"
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
      - "192.168.0.240"
      - "172.17.0.1"
      - "127.0.0.1"
    network_mode: host

  bash:
    image: base_image
    user: root
    volumes:
      - .:/usr/app/
    working_dir: /usr/app/
    entrypoint: /bin/sh
    ports:
      - 5432:5432
    network_mode: host

  python3:
    image: base_image
    user: root
    volumes:
      - .:/usr/app/
    working_dir: /usr/app/
    command: "python3"
    network_mode: host
  
  train:
    image: base_image
    user: root
    volumes:
      - .:/usr/app/
    working_dir: /usr/app/
    command: "python3 src/train.py"
    network_mode: host

  predict:
    image: base_image
    user: root
    volumes:
      - .:/usr/app/
    working_dir: /usr/app/
    command: "python3 src/predict.py"
    network_mode: host

  jupyter:
    image: base_image
    user: root
    volumes:
      - .:/usr/app/
    working_dir: /usr/app/
    environment:
      - JUPYTER_PORT
    command: "jupyter lab --ip=0.0.0.0 --port=${JUPYTER_PORT} --allow-root --no-browser"
    ports:
    #  - 8889:8889
      - ${JUPYTER_PORT}:${JUPYTER_PORT}
    #network_mode: host


  test:
    image: base_image
    user: root
    volumes:
      - .:/usr/app/
    working_dir: /usr/app/
    command: "pytest --verbose"
    network_mode: host

  aws:
    build:
      context: .
      dockerfile: Dockerfile_aws
    image: aws_image

  #TODO: make mirroring
  aws-jupyter:
    image: aws_image
    user: root
    #volumes:
    #  - .:/usr/app/
    working_dir: /opt/
    command: "jupyter lab --ip=0.0.0.0 --port=${AWS_JUPYTER_PORT} --allow-root --no-browser"
    ports:
      #- ${AWS_JUPYTER_PORT}:${AWS_JUPYTER_PORT}
      - 8889:8889

  dash:
    image: base_image
    user: root
    volumes:
      - .:/usr/app/
    working_dir: /usr/app/ 
    command: "python3 dashboard/app.py"
    ports:
      - 8050:8050
    #network_mode: host